- name: Actualizar cache de APT
  become: yes
  apt:
    update_cache: yes
  changed_when: false

- name: Eliminar repositorio Podman si existe
  become: yes
  file:
    path: /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    state: absent
  ignore_errors: yes

- name: AÃ±adir repositorio de Podman
  become: yes
  block:
    - name: Agregar clave GPG del repositorio Podman
      apt_key:
        url: https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/xUbuntu_20.04/Release.key
        state: present

    - name: Agregar repositorio Podman
      apt_repository:
        repo: "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /"
        state: present
        filename: devel:kubic:libcontainers:stable

  when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_version'] == "20.04"

- name: Actualizar cache de APT
  become: yes
  apt:
    update_cache: yes
  changed_when: false

- name: Instalar Podman
  become: yes
  apt:
    name: podman
    state: present

- name: Login to ACR
  containers.podman.podman_login:
    username: "{{ acr_username }}"
    password: "{{ acr_password }}"
    registry: "{{ acr_login_server }}"

- name: Descargar imagen de Nginx desde ACR
  containers.podman.podman_image:
    name: "{{ acr_login_server }}/nginx:nginximage"
    state: present

- name: Copiar la carpeta web al servidor
  become: yes
  copy:
    src: ../web/
    dest: /var/www/html/
    owner: 1000
    group: 1000
    mode: '0755'

- name: Verificar si el contenedor Nginx existe
  become: yes
  command: podman ps -a --filter "name=nginx_container" --format "{{ '{{' }} .ID {{ '}}' }}"
  register: nginx_container_id
  changed_when: false
  ignore_errors: yes

- name: Eliminar el contenedor Nginx si existe
  become: yes
  command: podman rm -f nginx_container
  when: nginx_container_id.stdout != ""

- name: Iniciar el contenedor Nginx con `podman_container`
  containers.podman.podman_container:
    name: nginx_container
    image: "{{ acr_login_server }}/nginx:nginximage"
    state: started
    detach: true
    volume:
      - "/var/www/html:/usr/share/nginx/html:ro"
    ports:
      - "8080:80"
